---

- name: Assert usage of systemd as an init system
  ansible.builtin.assert:
    that: ansible_service_mgr == 'systemd'
    msg: "This module only works with systemd"

- name: Update package cache (Debian)
  ansible.builtin.apt:
    update_cache: true
    cache_valid_time: 86400
  become: true
  when:
    - "ansible_os_family == 'Debian'"

###
# See 'vars/main.yml' for package selection.
###
- name: Install packages for rest-server
  ansible.builtin.package:
    name: "{{ restic_server_packages }}"
    state: present
  become: true

###
# Group does not get created with user creation in all distributions automatically
###
- name: Create backup group
  ansible.builtin.group:
    name: "{{ restic_server_group }}"
    system: true
    state: present
  become: true

###
# Creates a disabled user account (disabled: can't login via shell)
###
- name: Create backup user
  ansible.builtin.user:
    name: "{{ restic_server_user }}"
    group: "{{ restic_server_group }}"
    password: '*'
    shell: /usr/sbin/nologin
    state: present
  become: true

- name: Create directory for backups
  ansible.builtin.file:
    path: "{{ restic_server_backup_path }}"
    owner: "{{ restic_server_user }}"
    group: "{{ restic_server_group }}"
    mode: '0700'
    state: directory
  become: true

- name: Create installation directory
  ansible.builtin.file:
    path: "{{ restic_server_install_dir }}"
    owner: root
    group: root
    mode: '0755'
    state: directory
  become: true

###
# Only if we don't want to install a local file from the Ansible controller, and
# only if 'restic_server_version' is set to "latest". Otherwise, we already know
# what version to download.
# Inspired by cloudalchemy.prometheus role.
###
- name: Get current version from GitHub
  block:
    - name: Get latest release of rest-server
      ansible.builtin.uri:
        url: "https://api.github.com/repos/restic/rest-server/releases/latest"
        method: GET
        return_content: true
        status_code: 200
        body_format: json
      register: _latest_release
      until: _latest_release.status == 200
      retries: 3
      delay: 5
      changed_when: false
      delegate_to: localhost
      become: false
      run_once: true

    - name: Extract latest version number from GitHub API response
      ansible.builtin.set_fact:
        _restic_server_version_available: "{{ _latest_release.json.tag_name[1:] }}"
  when:
    - restic_server_from_local_dir | length == 0
    - restic_server_version == 'latest'
